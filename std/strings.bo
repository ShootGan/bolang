module strings

imports chars

fn strIsPrefix(pre string, str string) bool
    let i = 0
    while i < len(pre) 
        if i >= len(str) || pre[i] != str[i]
            return false 
        i = i + 1

    return true


fn strEqual(a string, b string) bool
    if len(a) != len(b)
        return false

    let i = 0
    while i < len(a)
        if a[i] != b[i]
            return false
        i = i + 1

    return true


fn strReadInt(s string) {null | i64}
    if len(s) <= 0 || !isDigit(s[0])
        return null

    let (i, n) = (0, 0)

    while isDigit(s[i])
        n = n * 10
        n = n + i64(s[i] - '0')
        i = i + 1

    return :{null | i64}(n)


fn strReverse(s string) string
    let r = ""
    let i = len(s)
    while i > 0
        i = i - 1
        r = append(r, s[i..i+1])

    return r
