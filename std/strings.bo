module strings

import chars
import maths



fn + (a string, b string) string
    let r = copy(a)
    r <<- b
    return r


fn == (a string, b string) bool
    if len(a) != len(b)
        return false

    let i = 0
    while i < len(a)
        if a[i] != b[i]
            return false
        i = i + 1

    return true


fn string(b bool) string
    switch b
        true; return "true"
        false; return "false"


fn string(n i64) string
    if n == 0
        return "0"

    let digits = "0123456789"
    let str = ""

    let x = abs(n)
    while x > 0
        str <- digits[x % 10]
        x   = x / 10

    if n < 0
        str <- '-'
    return strReverse(str)


fn strIsPrefix(pre string, str string) bool
    return str[..len(pre)] == pre


fn strReadInt(s string) (i64, bool)
    if len(s) <= 0 || !isDigit(s[0])
        return (0, false)

    let (i, n) = (0, 0)

    while isDigit(s[i])
        n = n * 10
        n = n + i64(s[i] - '0')
        i = i + 1

    return (n, true)


fn strReverse(s string) string
    let r = ""
    let i = len(s)

    while i > 0
        i = i - 1
        r <- s[i]

    return r

