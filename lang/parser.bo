module parser

imports lexer
imports ../std/strings


type Operator {
    null
    OpPlus
    OpMinus
    OpTimes
    OpDivide
}


type Expr {
    null
    ExprIdent : string
    ExprInt   : i64
    ExprFloat : f64
    ExprInfix : (Operator, Expr, Expr)
}


fn string(e Expr) string
    switch e
        null          ; return "null"
        ExprIdent(str); return "ident: " + str
        ExprInt(n)    ; return "int: " + string(n)


type ParseResult ({ null | :Expr }, [Token])


fn parseTokens(tokens [Token]) ParseResult
    return (null, [])

