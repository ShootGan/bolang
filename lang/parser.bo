module parser

imports lexer
imports ../std/strings

type Operator {
    OpPlus
    OpMinus
    OpTimes
    OpDivide
}

type Expr {
    ExprIdent : string
    ExprInt   : i64
    ExprFloat : f64
    ExprInfix : (Operator, Expr, Expr)
}

fn string(e Expr) string
    switch e
        ExprIdent(str); return "ident: " + str

type ParseResult ({ null | :Expr }, [Token])


fn parseTokens(tokens [Token]) ParseResult
    return (null, [])

