module lexer

imports ../std/io
imports ../std/strings

type Token = i64

let TokenSym = Token(1)
let TokenOp  = Token(2)



fn lexLet(str String) (:{:Token}, :String)
    if isPrefix(String({'l', 'e', 't'}), str)
        return ({TokenSym}, str)

    return ({}, str)


fn getNextToken(str String) (:Token, :String)
    let loop = true
    let next = char()

    while loop 
        loop = false
        next = getChar()

    return (TokenSym, str)


